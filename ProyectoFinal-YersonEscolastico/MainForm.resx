<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAADAAAABAAA
        AAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        3f9lY9v/WVjY/05M1f9BP9L/NTPP/y0qzP8qJ8v/KCbK/yQjxv8eH8D/Gxy+/xscvv8wLsr/SkfU/0VD
        0f82Ncv/UlDW/1ZU1/9TUdb/REPN/0hIyf9OTdL/Q0PN/zk5yf8vMMX/JijB/yAivv8cH7r/GBy3/xUZ
        sv8VGLL/GByn/15eYf+Pjo7/09LR/5+env9NTUz/CgoKYgAAAAAAAAAAAAAABoCAgdGYmNX/aWrU/5GR
        5P+Skef/iojl/4B/4/92deD/a2nd/19d2v9RT9f/Q0DT/zc10P8zMM7/MS/O/y8tzf8uK8z/LCrM/ykn
        yv8iIsP/HR6//x4fwP8tLMn/NzXO/0A+0f9LSdT/SknP/09Ozv9jYdz/YF7a/1dW1v9MS9H/QUHM/zc3
        yP8tLsT/JSfA/x8ivf8cHrr/IyLE/0VEZP+BgH//iomI/4eGhv9AQD//AwMDSQAAAAAAAAAAAAAAAGho
        aCyjotbtpaTo/6+u7v+ko+v/mpjp/5GP5/+HheX/fnzj/3Fx2f9gYtH/V1nQ/0dIzP87PMr/OTjP/zg2
        0f82NND/NTLP/zMxz/8xL87/Ly3N/ywqy/8lJcT/ISPB/yUmw/8wLsv/MjHI/zc2yP9KR9D/Mzaj/z9B
        sP9iYNv/XlzZ/1VT1P9JSdD/Pj7L/zQ1x/8rLcP/IyLG/1RRrv87Ozv/cnFw/1xcW/8EBAT7BgAmKAAA
        AAAAAAAAAAAAAAAAAAB/f90utLPs1MjH8/7BwPL/tLPv/6ak7P+Yl+n/hoXk/3p63P+AfuT/a2nf/1xZ
        2/9OTNb/Pz/N/zY3yf81Ncr/PTvT/zs50v85N9L/ODXQ/y8tuP8mJJn/HBt//xMSZv8LDFH/ExJO/1xb
        k/8uLWb/BgxQ/wwUnP8yNcD/P0G4/2Fe2v9iYNv/XFvY/1NS0/9HR8//MzPK/zk20f9JRoj/FxcZ/wcH
        B/8AAQX/DRCBnAAAAAAAAAAAAAAAAAAAAAAAAAAAv7//BK+v7Ve+vPC9w8Ly+cPC8v+3tvD/p6bt/4KA
        5P92dd7/enjh/25s4f9hX97/Wlfc/1NQ2v9HRdH/KCmX/x4dZf8REDX/EA8X/x4dHP8qKCb/OTc2/0lH
        Rv9WVlX/XVxc/3p6ef+Tk5P/DAsV/0A6qP8jH83/CRKZ/0FAqf9WU9j/Xlvc/2Nh3P9iYNr/S0nT/y4u
        x/8qK8T/Kyub/woNU/8DDHX/GRq93gAA/wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoaHuHq2t
        7G60tO/AtbTv+LSz8P+lpO3/fn7e/2Rl0/9WWND/WFjM/zQyeP8WFif/PT07/2RjX/91dG7/cW9o/11b
        U/9wbGf/ZmJe/2RhXv9qaGb/dXNx/2xra/++vr7/ISAg/2tlev9cVKL/Uk+H/3VtaP9tZnf/PDqN/05L
        0P9XVNr/WFbY/1NR1v83OsT/Fx+s/w4ZpP8VGrT/IB7H+xIStg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkZHmFZmW6FqfnuqjnZrq6JmX6f5TUo3/Fxgj/1tdW/+Vl5n/iYmN/25t
        bf9gX1j/WllQ/1ZVTP9pZl3/dHBn/2hjXf9jXVj/bGZh/2BdWv+SkpL/e3t7/3ZtZP+Ad27/hXtx/4N5
        cP92bmb/ISAf/xIRIf9HRZ//Tk3S/09N1f9YVtf/X13Z/2Jg2v9QT9T/OTfN/DYkyA4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AU5OhzFra2vIhYWF/3d6
        ev9kZ2b/am1q/3V2df91dXL/a2pl/2JhWf9kYlj/jYd7/4B6b/91bmX/Z2BZ/1pVUP9jYmD/wcHB/0tF
        P/+UiX//iX91/4l+dP9rZF3/GRkY/zU1Nf8TExX/GBcu/05Ntf9UUtX/bWzc/4KA4f+Eg+L/X17XswAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAbJZk3amyg/o2Ojf+SlZL/jpKN/4aJhv+EhoT/g4SC/3x8eP9ycWv/lI+E/5eSh/+Lhnv/fnhu/2pk
        Xf9FQj//xMPD/y4uLv8oJSP/npSL/4V7cv9XUk7/MDAw/x4eHv8AAAD/AAAB/0A/a/9radr/eXfe/46N
        4/+MiuHBeHjWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAGbIKOjXVoYaEtMKYmJj+oKOg/7S4s/+5vrn/vL+7/7a3tf+np6b/mJeS/62q
        of+cl43/fHhv/25saP+RkZD/z8/P/xQUFP8EAwP/nJSN/392bv9dWFP/MzMz/xAQF/8cG1L/MzKj/09O
        0v9ta9r+fn3e5oGB33BmZswFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwsLBipqam9Zyem/+0uLP/tLiz/7Cz
        r/+nqaf/nJyc/5aWlP+fn57/xMTE/8bGxv/a2tqSNjY2cQAAAI0AAACpeHFrzIl+df1RT0z/U1Nn9yko
        wO4fHcbiKyjJw0VD0JNKStJLAADMBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLy8Nri4
        uNOmpqb+rKys/7Kysv7BwcHu1NTUy93d3ZjHwbymmI2E/1VSUPhGRkYSAAAAAAAAAAAAAAAAAAAAAYKC
        gi19fX1Nf39/GgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAL+/vwTIyMgczs7OJc7OzhXa2toHAAAAAAAAAAC/f38EeXNuLE1NTSEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD//wP///8AAP/AAH///wAA/AAAD///AADgAAAD//8AAMAAAAB//wAAgAAAAA//AADAAAAAA/8AAOAA
        AAAAfwAAwAAAAAAPAACAAAAAAAMAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAMAAAAAAAQAA4AAAAAABAADwAAAAAAAAAP4AAAAAAAAA/8AAAAAAAAD/+AAAAAAAAP/+
        AAAAAQAA//4AAAADAAD//8AAAA8AAP//4AHD/wAA///wY///AAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>